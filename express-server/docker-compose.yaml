services:
  express-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: express-api
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_URL: ${DATABASE_URL}
      S3_ACCESS_KEY: ${S3_ACCESS_KEY}
      S3_SECRET_KEY: ${S3_SECRET_KEY}
      S3_ENDPOINT: ${S3_ENDPOINT}
      S3_BUCKET: ${S3_BUCKET}
      IMGPROXY_KEY: ${IMGPROXY_KEY}
      IMGPROXY_SALT: ${IMGPROXY_SALT}
      IMGPROXY_BASE_URL: ${IMGPROXY_BASE_URL}
      JWT_SECRET: ${JWT_SECRET}
    networks:
      - proxy
      - appnet
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      
      # API routes
      - "traefik.http.routers.express-api.rule=Host(`api.example.com`)"
      - "traefik.http.routers.express-api.entrypoints=websecure"
      - "traefik.http.routers.express-api.tls=true"
      - "traefik.http.routers.express-api.tls.certresolver=letsencrypt"
      - "traefik.http.services.express-api.loadbalancer.server.port=3000"

      # CORS middleware
      - "traefik.http.middlewares.api-cors.headers.accesscontrolallowmethods=GET,OPTIONS,PUT,POST,DELETE,PATCH"
      - "traefik.http.middlewares.api-cors.headers.accesscontrolallowheaders=*"
      - "traefik.http.middlewares.api-cors.headers.accesscontrolalloworiginlistregex=^https://.*\\.example\\.com$$"
      - "traefik.http.middlewares.api-cors.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.api-cors.headers.addvaryheader=true"
      - "traefik.http.routers.express-api.middlewares=api-cors"

networks:
  proxy:
    external: true
  appnet:
    external: true